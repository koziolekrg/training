        -:    0:Source:/home/pako/Qt5.6.0/5.6/gcc_64/include/QtCore/qrefcount.h
        -:    0:Graph:/home/pako/Desktop/GitLab/library/media_player_qml_cmake/build/CMakeFiles/music_player.dir/src/mediaplayer.cpp.gcno
        -:    0:Data:/home/pako/Desktop/GitLab/library/media_player_qml_cmake/build/CMakeFiles/music_player.dir/src/mediaplayer.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/****************************************************************************
        -:    2:**
        -:    3:** Copyright (C) 2015 The Qt Company Ltd.
        -:    4:** Contact: http://www.qt.io/licensing/
        -:    5:**
        -:    6:** This file is part of the QtCore module of the Qt Toolkit.
        -:    7:**
        -:    8:** $QT_BEGIN_LICENSE:LGPL21$
        -:    9:** Commercial License Usage
        -:   10:** Licensees holding valid commercial Qt licenses may use this file in
        -:   11:** accordance with the commercial license agreement provided with the
        -:   12:** Software or, alternatively, in accordance with the terms contained in
        -:   13:** a written agreement between you and The Qt Company. For licensing terms
        -:   14:** and conditions see http://www.qt.io/terms-conditions. For further
        -:   15:** information use the contact form at http://www.qt.io/contact-us.
        -:   16:**
        -:   17:** GNU Lesser General Public License Usage
        -:   18:** Alternatively, this file may be used under the terms of the GNU Lesser
        -:   19:** General Public License version 2.1 or version 3 as published by the Free
        -:   20:** Software Foundation and appearing in the file LICENSE.LGPLv21 and
        -:   21:** LICENSE.LGPLv3 included in the packaging of this file. Please review the
        -:   22:** following information to ensure the GNU Lesser General Public License
        -:   23:** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
        -:   24:** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
        -:   25:**
        -:   26:** As a special exception, The Qt Company gives you certain additional
        -:   27:** rights. These rights are described in The Qt Company LGPL Exception
        -:   28:** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
        -:   29:**
        -:   30:** $QT_END_LICENSE$
        -:   31:**
        -:   32:****************************************************************************/
        -:   33:
        -:   34:#ifndef QREFCOUNT_H
        -:   35:#define QREFCOUNT_H
        -:   36:
        -:   37:#include <QtCore/qatomic.h>
        -:   38:
        -:   39:QT_BEGIN_NAMESPACE
        -:   40:
        -:   41:
        -:   42:namespace QtPrivate
        -:   43:{
        -:   44:
        -:   45:class RefCount
        -:   46:{
        -:   47:public:
    #####:   48:    inline bool ref() Q_DECL_NOTHROW {
    #####:   49:        int count = atomic.load();
        -:   50:#if QT_SUPPORTS(UNSHARABLE_CONTAINERS)
    #####:   51:        if (count == 0) // !isSharable
    #####:   52:            return false;
        -:   53:#endif
    #####:   54:        if (count != -1) // !isStatic
    #####:   55:            atomic.ref();
    #####:   56:        return true;
        -:   57:    }
        -:   58:
    #####:   59:    inline bool deref() Q_DECL_NOTHROW {
    #####:   60:        int count = atomic.load();
        -:   61:#if QT_SUPPORTS(UNSHARABLE_CONTAINERS)
    #####:   62:        if (count == 0) // !isSharable
    #####:   63:            return false;
        -:   64:#endif
    #####:   65:        if (count == -1) // isStatic
    #####:   66:            return true;
    #####:   67:        return atomic.deref();
        -:   68:    }
        -:   69:
        -:   70:#if QT_SUPPORTS(UNSHARABLE_CONTAINERS)
        -:   71:    bool setSharable(bool sharable) Q_DECL_NOTHROW
        -:   72:    {
        -:   73:        Q_ASSERT(!isShared());
        -:   74:        if (sharable)
        -:   75:            return atomic.testAndSetRelaxed(0, 1);
        -:   76:        else
        -:   77:            return atomic.testAndSetRelaxed(1, 0);
        -:   78:    }
        -:   79:
        -:   80:    bool isSharable() const Q_DECL_NOTHROW
        -:   81:    {
        -:   82:        // Sharable === Shared ownership.
        -:   83:        return atomic.load() != 0;
        -:   84:    }
        -:   85:#endif
        -:   86:
        -:   87:    bool isStatic() const Q_DECL_NOTHROW
        -:   88:    {
        -:   89:        // Persistent object, never deleted
        -:   90:        return atomic.load() == -1;
        -:   91:    }
        -:   92:
        -:   93:    bool isShared() const Q_DECL_NOTHROW
        -:   94:    {
        -:   95:        int count = atomic.load();
        -:   96:        return (count != 1) && (count != 0);
        -:   97:    }
        -:   98:
        -:   99:    void initializeOwned() Q_DECL_NOTHROW { atomic.store(1); }
        -:  100:    void initializeUnsharable() Q_DECL_NOTHROW { atomic.store(0); }
        -:  101:
        -:  102:    QBasicAtomicInt atomic;
        -:  103:};
        -:  104:
        -:  105:}
        -:  106:
        -:  107:#define Q_REFCOUNT_INITIALIZE_STATIC { Q_BASIC_ATOMIC_INITIALIZER(-1) }
        -:  108:
        -:  109:QT_END_NAMESPACE
        -:  110:
        -:  111:#endif
